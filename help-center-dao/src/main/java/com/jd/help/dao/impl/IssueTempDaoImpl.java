package com.jd.help.dao.impl;

import com.jd.common.dao.BaseDao;
import com.jd.help.dao.IssueTempDao;
import com.jd.help.dao.util.Page;
import com.jd.help.domain.IssueTemp;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Repository;

import javax.annotation.Resource;
import javax.sql.DataSource;
import java.util.List;

/**
 * IssueTemp dao实现
 * generated by bud
 *
 * @author @laichendong
 */
@Repository("issueTempDao")
@SuppressWarnings("unused")
public class IssueTempDaoImpl extends BaseDao implements IssueTempDao {

    private final static Log logger = LogFactory.getLog(IssueTempDaoImpl.class);

    /**
     * 注入数据源
     */
    @Override
    @Resource(name = "helpCenterDataSource")
    public void setDataSource(DataSource dataSource) {
        super.setDataSource(dataSource);
    }


    public long insert(IssueTemp issueTemp) {
        return (Long) insert("IssueTemp.insert", issueTemp);
    }

    public int delete(IssueTemp issueTemp) {
        return update("IssueTemp.delete", issueTemp);
    }

    public int update(IssueTemp issueTemp) {
        return update("IssueTemp.update", issueTemp);
    }

    public IssueTemp queryForObject(IssueTemp issueTemp) {
        try {
            return (IssueTemp) queryForObject("IssueTemp.queryForObject", issueTemp);
        } catch (DataAccessException e) {
            logger.error("数据库访问出错！", e);
            return null;
        }
    }

    public int queryForCount(IssueTemp issueTemp) {
        return (Integer) queryForObject("IssueTemp.queryForCount", issueTemp);
    }

    @SuppressWarnings("unchecked")
    public List<IssueTemp> queryForList(IssueTemp issueTemp, int page, int pageSize) {
        Page<IssueTemp> condition = new Page<IssueTemp>();
        condition.setModel(issueTemp);
        condition.setPage(page);
        condition.setPageSize(pageSize);
        return queryForList("IssueTemp.queryForList", condition);
    }

}
